//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameDifficultyListenerComponent gameDifficultyListener { get { return (GameDifficultyListenerComponent)GetComponent(GameComponentsLookup.GameDifficultyListener); } }
    public bool hasGameDifficultyListener { get { return HasComponent(GameComponentsLookup.GameDifficultyListener); } }

    public void AddGameDifficultyListener(System.Collections.Generic.List<IGameDifficultyListener> newValue) {
        var index = GameComponentsLookup.GameDifficultyListener;
        var component = CreateComponent<GameDifficultyListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameDifficultyListener(System.Collections.Generic.List<IGameDifficultyListener> newValue) {
        var index = GameComponentsLookup.GameDifficultyListener;
        var component = CreateComponent<GameDifficultyListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameDifficultyListener() {
        RemoveComponent(GameComponentsLookup.GameDifficultyListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameDifficultyListener;

    public static Entitas.IMatcher<GameEntity> GameDifficultyListener {
        get {
            if (_matcherGameDifficultyListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameDifficultyListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameDifficultyListener = matcher;
            }

            return _matcherGameDifficultyListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameDifficultyListener(IGameDifficultyListener value) {
        var listeners = hasGameDifficultyListener
            ? gameDifficultyListener.value
            : new System.Collections.Generic.List<IGameDifficultyListener>();
        listeners.Add(value);
        ReplaceGameDifficultyListener(listeners);
    }

    public void RemoveGameDifficultyListener(IGameDifficultyListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameDifficultyListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameDifficultyListener();
        } else {
            ReplaceGameDifficultyListener(listeners);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity enemySpawnIntervalTimeEntity { get { return GetGroup(GameMatcher.EnemySpawnIntervalTime).GetSingleEntity(); } }
    public EnemySpawnIntervalTimeComponent enemySpawnIntervalTime { get { return enemySpawnIntervalTimeEntity.enemySpawnIntervalTime; } }
    public bool hasEnemySpawnIntervalTime { get { return enemySpawnIntervalTimeEntity != null; } }

    public GameEntity SetEnemySpawnIntervalTime(float newValue) {
        if (hasEnemySpawnIntervalTime) {
            throw new Entitas.EntitasException("Could not set EnemySpawnIntervalTime!\n" + this + " already has an entity with EnemySpawnIntervalTimeComponent!",
                "You should check if the context already has a enemySpawnIntervalTimeEntity before setting it or use context.ReplaceEnemySpawnIntervalTime().");
        }
        var entity = CreateEntity();
        entity.AddEnemySpawnIntervalTime(newValue);
        return entity;
    }

    public void ReplaceEnemySpawnIntervalTime(float newValue) {
        var entity = enemySpawnIntervalTimeEntity;
        if (entity == null) {
            entity = SetEnemySpawnIntervalTime(newValue);
        } else {
            entity.ReplaceEnemySpawnIntervalTime(newValue);
        }
    }

    public void RemoveEnemySpawnIntervalTime() {
        enemySpawnIntervalTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EnemySpawnIntervalTimeComponent enemySpawnIntervalTime { get { return (EnemySpawnIntervalTimeComponent)GetComponent(GameComponentsLookup.EnemySpawnIntervalTime); } }
    public bool hasEnemySpawnIntervalTime { get { return HasComponent(GameComponentsLookup.EnemySpawnIntervalTime); } }

    public void AddEnemySpawnIntervalTime(float newValue) {
        var index = GameComponentsLookup.EnemySpawnIntervalTime;
        var component = CreateComponent<EnemySpawnIntervalTimeComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEnemySpawnIntervalTime(float newValue) {
        var index = GameComponentsLookup.EnemySpawnIntervalTime;
        var component = CreateComponent<EnemySpawnIntervalTimeComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEnemySpawnIntervalTime() {
        RemoveComponent(GameComponentsLookup.EnemySpawnIntervalTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemySpawnIntervalTime;

    public static Entitas.IMatcher<GameEntity> EnemySpawnIntervalTime {
        get {
            if (_matcherEnemySpawnIntervalTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemySpawnIntervalTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemySpawnIntervalTime = matcher;
            }

            return _matcherEnemySpawnIntervalTime;
        }
    }
}

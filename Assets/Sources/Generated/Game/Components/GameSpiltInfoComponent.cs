//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpiltInfoComponent spiltInfo { get { return (SpiltInfoComponent)GetComponent(GameComponentsLookup.SpiltInfo); } }
    public bool hasSpiltInfo { get { return HasComponent(GameComponentsLookup.SpiltInfo); } }

    public void AddSpiltInfo(SpiltInfo newValue) {
        var index = GameComponentsLookup.SpiltInfo;
        var component = CreateComponent<SpiltInfoComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpiltInfo(SpiltInfo newValue) {
        var index = GameComponentsLookup.SpiltInfo;
        var component = CreateComponent<SpiltInfoComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpiltInfo() {
        RemoveComponent(GameComponentsLookup.SpiltInfo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpiltInfo;

    public static Entitas.IMatcher<GameEntity> SpiltInfo {
        get {
            if (_matcherSpiltInfo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpiltInfo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpiltInfo = matcher;
            }

            return _matcherSpiltInfo;
        }
    }
}

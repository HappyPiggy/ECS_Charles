//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameScoreEntity { get { return GetGroup(GameMatcher.GameScore).GetSingleEntity(); } }
    public GameScoreComponent gameScore { get { return gameScoreEntity.gameScore; } }
    public bool hasGameScore { get { return gameScoreEntity != null; } }

    public GameEntity SetGameScore(int newValue) {
        if (hasGameScore) {
            throw new Entitas.EntitasException("Could not set GameScore!\n" + this + " already has an entity with GameScoreComponent!",
                "You should check if the context already has a gameScoreEntity before setting it or use context.ReplaceGameScore().");
        }
        var entity = CreateEntity();
        entity.AddGameScore(newValue);
        return entity;
    }

    public void ReplaceGameScore(int newValue) {
        var entity = gameScoreEntity;
        if (entity == null) {
            entity = SetGameScore(newValue);
        } else {
            entity.ReplaceGameScore(newValue);
        }
    }

    public void RemoveGameScore() {
        gameScoreEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameScoreComponent gameScore { get { return (GameScoreComponent)GetComponent(GameComponentsLookup.GameScore); } }
    public bool hasGameScore { get { return HasComponent(GameComponentsLookup.GameScore); } }

    public void AddGameScore(int newValue) {
        var index = GameComponentsLookup.GameScore;
        var component = CreateComponent<GameScoreComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameScore(int newValue) {
        var index = GameComponentsLookup.GameScore;
        var component = CreateComponent<GameScoreComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameScore() {
        RemoveComponent(GameComponentsLookup.GameScore);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameScore;

    public static Entitas.IMatcher<GameEntity> GameScore {
        get {
            if (_matcherGameScore == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameScore);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameScore = matcher;
            }

            return _matcherGameScore;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Asset = 0;
    public const int AssetListener = 1;
    public const int ColorType = 2;
    public const int Dead = 3;
    public const int DeadListener = 4;
    public const int Destroyed = 5;
    public const int Enable = 6;
    public const int EnemyInfo = 7;
    public const int EnemySpawnCount = 8;
    public const int EnemySpawnIntervalTime = 9;
    public const int EnemyState = 10;
    public const int EnemyType = 11;
    public const int GameDestroyedListener = 12;
    public const int GameProgress = 13;
    public const int GameProgressListener = 14;
    public const int GameViewListener = 15;
    public const int GlobalHero = 16;
    public const int GlobalHeroListener = 17;
    public const int Hero = 18;
    public const int Invincible = 19;
    public const int ItemInfo = 20;
    public const int ItemType = 21;
    public const int MapInfo = 22;
    public const int Mover = 23;
    public const int OnTriggerEnter = 24;
    public const int OnTriggerEnterListener = 25;
    public const int OnTriggerExit = 26;
    public const int OnTriggerExitListener = 27;
    public const int PlayerInfo = 28;
    public const int Position = 29;
    public const int Rotation = 30;
    public const int Speed = 31;
    public const int SpiltInfo = 32;
    public const int UID = 33;
    public const int UnitType = 34;
    public const int View = 35;

    public const int TotalComponents = 36;

    public static readonly string[] componentNames = {
        "Asset",
        "AssetListener",
        "ColorType",
        "Dead",
        "DeadListener",
        "Destroyed",
        "Enable",
        "EnemyInfo",
        "EnemySpawnCount",
        "EnemySpawnIntervalTime",
        "EnemyState",
        "EnemyType",
        "GameDestroyedListener",
        "GameProgress",
        "GameProgressListener",
        "GameViewListener",
        "GlobalHero",
        "GlobalHeroListener",
        "Hero",
        "Invincible",
        "ItemInfo",
        "ItemType",
        "MapInfo",
        "Mover",
        "OnTriggerEnter",
        "OnTriggerEnterListener",
        "OnTriggerExit",
        "OnTriggerExitListener",
        "PlayerInfo",
        "Position",
        "Rotation",
        "Speed",
        "SpiltInfo",
        "UID",
        "UnitType",
        "View"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AssetComponent),
        typeof(AssetListenerComponent),
        typeof(ColorTypeComponent),
        typeof(DeadComponent),
        typeof(DeadListenerComponent),
        typeof(DestroyedComponent),
        typeof(EnableComponent),
        typeof(EnemyInfoComponent),
        typeof(EnemySpawnCountComponent),
        typeof(EnemySpawnIntervalTimeComponent),
        typeof(EnemyStateComponent),
        typeof(EnemyTypeComponent),
        typeof(GameDestroyedListenerComponent),
        typeof(GameProgressComponent),
        typeof(GameProgressListenerComponent),
        typeof(GameViewListenerComponent),
        typeof(GlobalHeroComponent),
        typeof(GlobalHeroListenerComponent),
        typeof(HeroComponent),
        typeof(InvincibleComponent),
        typeof(ItemInfoComponent),
        typeof(ItemTypeComponent),
        typeof(MapInfoComponent),
        typeof(MoverComponent),
        typeof(OnTriggerEnterComponent),
        typeof(OnTriggerEnterListenerComponent),
        typeof(OnTriggerExitComponent),
        typeof(OnTriggerExitListenerComponent),
        typeof(PlayerInfoComponent),
        typeof(PositionComponent),
        typeof(RotationComponent),
        typeof(SpeedComponent),
        typeof(SpiltInfoComponent),
        typeof(UIDComponent),
        typeof(UnitTypeComponent),
        typeof(ViewComponent)
    };
}

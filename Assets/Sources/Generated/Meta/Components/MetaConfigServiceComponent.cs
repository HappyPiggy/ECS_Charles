//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity configServiceEntity { get { return GetGroup(MetaMatcher.ConfigService).GetSingleEntity(); } }
    public ConfigServiceComponent configService { get { return configServiceEntity.configService; } }
    public bool hasConfigService { get { return configServiceEntity != null; } }

    public MetaEntity SetConfigService(ConfigService newInstance) {
        if (hasConfigService) {
            throw new Entitas.EntitasException("Could not set ConfigService!\n" + this + " already has an entity with ConfigServiceComponent!",
                "You should check if the context already has a configServiceEntity before setting it or use context.ReplaceConfigService().");
        }
        var entity = CreateEntity();
        entity.AddConfigService(newInstance);
        return entity;
    }

    public void ReplaceConfigService(ConfigService newInstance) {
        var entity = configServiceEntity;
        if (entity == null) {
            entity = SetConfigService(newInstance);
        } else {
            entity.ReplaceConfigService(newInstance);
        }
    }

    public void RemoveConfigService() {
        configServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public ConfigServiceComponent configService { get { return (ConfigServiceComponent)GetComponent(MetaComponentsLookup.ConfigService); } }
    public bool hasConfigService { get { return HasComponent(MetaComponentsLookup.ConfigService); } }

    public void AddConfigService(ConfigService newInstance) {
        var index = MetaComponentsLookup.ConfigService;
        var component = CreateComponent<ConfigServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceConfigService(ConfigService newInstance) {
        var index = MetaComponentsLookup.ConfigService;
        var component = CreateComponent<ConfigServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveConfigService() {
        RemoveComponent(MetaComponentsLookup.ConfigService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherConfigService;

    public static Entitas.IMatcher<MetaEntity> ConfigService {
        get {
            if (_matcherConfigService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.ConfigService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherConfigService = matcher;
            }

            return _matcherConfigService;
        }
    }
}
